<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yundaren.user.dao.SsoDao">
	
	<insert id="createSsoUser" useGeneratedKeys="true" keyProperty="id"
		parameterType="com.yundaren.user.po.SsoUserPo">
		<selectKey resultType="long" keyProperty="id">
			SELECT
			LAST_INSERT_ID()
		</selectKey>  
          INSERT INTO sso_user
            (
              login_name,
              password,
              user_id,
              account_type,
              last_login_time,
              is_active,
              ip_address,
              create_time
            )
          VALUES
            (
              #{loginName},
              #{password},
              #{userId},
              #{accountType},
              #{lastLoginTime},
              #{isActive},
              #{ipAddress},
              #{createTime}
            )
	</insert>
	
	<select id="getSsoUserByUserName" parameterType="java.lang.String"
		resultType="com.yundaren.user.po.SsoUserPo">
          SELECT
            id,
            user_id as userId,
            account_type as accountType,
            login_name as loginName,
            password as password,
            last_login_time as lastLoginTime,
            create_time as createTime,
            is_active as isActive,
            ext_attrs as extAttrs
          FROM sso_user
          WHERE
            login_name = #{userName}
	</select>
	
	<select id="getSsoUserById" parameterType="java.lang.Long"
		resultType="com.yundaren.user.po.SsoUserPo">
          SELECT
            id,
            user_id as userId,
            account_type as accountType,
            login_name as loginName,
            password as password,
            last_login_time as lastLoginTime,
            create_time as createTime,
            is_active as isActive,
            ext_attrs as extAttrs
          FROM sso_user
          WHERE
            id = #{id}
	</select>
	
	<update id="update2ActiveStatus" parameterType="java.util.Map">
		UPDATE 
			sso_user
		SET
			is_active = 0
		WHERE
			login_name =  #{loginName}
	</update>
	
	<update id="updateSsoUser" parameterType="com.yundaren.user.po.SsoUserPo">
		UPDATE 
			sso_user
		SET
			<if test="password!=null and password!=''">
				password = #{password},
			</if>
			<if test="lastLoginTime!=null and lastLoginTime!=''">
				last_login_time = #{lastLoginTime},
			</if>
			<if test="ipAddress!=null and ipAddress!=''">
				ip_address = #{ipAddress},
			</if>
			login_name =  #{loginName}
		WHERE
			login_name =  #{loginName}
	</update>
	
	<update id="updateLoginName" parameterType="java.util.Map">
		UPDATE 
			sso_user
		SET
			login_name = #{newLoginName}
		WHERE
			login_name = #{oldLoginName}
	</update>
	
	<update id="updateSsoUserPassword" parameterType="java.util.Map">
		UPDATE 
			sso_user
		SET
			password = #{newPassword}
		WHERE
			user_id = ( select t.user_id from (select user_id from sso_user where login_name = #{loginName}) t)
	</update>
	
	<update id="updatePasswordByID" parameterType="java.util.Map">
		UPDATE 
			sso_user
		SET
			password = #{newPassword}
		WHERE
			user_id = #{uid}
	</update>
	
	<select id="getSsoUserByAccountType" parameterType="java.util.Map"
		resultType="com.yundaren.user.po.SsoUserPo">
          SELECT
            id,
            user_id as userId,
            account_type as accountType,
            login_name as loginName,
            password as password,
            last_login_time as lastLoginTime,
            create_time as createTime,
            is_active as isActive,
            ext_attrs as extAttrs
          FROM sso_user
          WHERE
            user_id = #{userId} and account_type = #{accountType}
	</select>
</mapper>
